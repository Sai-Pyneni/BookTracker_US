@model BookTracker.Models.userTable

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            User ID:
            <div class="col-md-10">
                @Html.DisplayFor(model => model.userID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            User Name:
            <div class="col-md-10">
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Role:
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.userRoleID,
                new List<SelectListItem>()
                          {
                             new SelectListItem() { Text = "Admin", Value = "1"},
                             new SelectListItem() { Text = "Manager", Value = "2" },
                              new SelectListItem() { Text = "Accountant", Value = "3" },
                                new SelectListItem() { Text = "None", Value = "4" },


                          },
                          new { htmlAttributes = new { @class = "form-control", @placeholder = "Select Category"} }
                        )
                @Html.ValidationMessageFor(model => model.userRoleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            State:
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.userStateID,
                 new List<SelectListItem>()
                           {
                              new SelectListItem() { Text = "Inactive", Value = "0"},
                              new SelectListItem() { Text = "Active", Value = "1" },


                           },
                           new { htmlAttributes = new { @class = "form-control" , @placeholder = "Select Category"} }
                         )
                @Html.ValidationMessageFor(model => model.userStateID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            First Name:
            <div class="col-md-10">
                @Html.EditorFor(model => model.userFName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userFName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Last Name:
            <div class="col-md-10">
                @Html.EditorFor(model => model.userLName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Phone Number:
            <div class="col-md-10">
                @Html.EditorFor(model => model.userPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Email:
            <div class="col-md-10">
                @Html.EditorFor(model => model.userEMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userEMail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Index")
</div>

