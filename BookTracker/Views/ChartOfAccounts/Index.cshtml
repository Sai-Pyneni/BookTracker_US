@model BookTracker.ViewModels.CharterAccountsModel
@{

    if (Session["userFName"] == null)
    {
        Html.Display("You must be logged in!");
        Response.Redirect("~/userTable/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js">s</script>
<script src="~/Content/DataTables/js/jquery.dataTables.min.js"></script>
<script src="~/Content/DataTables/js/dataTables.bootstrap4.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/moment.min.js"></script>



<html>
<head class="container-fluid">
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>


    <link href="~/Content/DataTables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/css/dataTables.jqueryui.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">


    <!--Add Text Box Script-->

  


</head>
<body class="body">

    <div style="margin:0 auto" class="table table-striped table-responsive table-bordered">
        <a href="#" class="btn btn-lg btn-success" onclick="AddAccounts()" style="padding-bottom:10px">Add An Account</a>
        <div class="row" style="padding-left: 15px">

            <div style="padding: 15px">
                Account Type:
                <select id="table-filter" class="form-control dropdown">
                    <option value="">All</option>
                    <option>Asset</option>
                    <option>Operating Revenues</option>
                    <option>Owners Equity</option>
                    <option>Liability</option>
                </select>


            </div>
            <div style="padding: 15px">
                Account Term:
                <select id="table-filter1" class="form-control dropdown">
                    <option value="">All</option>
                    <option>Current</option>
                    <option>Long-Term</option>

                    <option>None</option>
                </select>
            </div>
            <div style="padding: 15px">
                Account Status:
                <select id="table-filter2" class="form-control dropdown">
                    <option value="">All</option>
                    <option>Active</option>
                    <option>Inactive</option>

                </select>


            </div>

        </div>
        <table id="accountsTable">
            <thead class="thead-dark">
                <tr>
                    <th>Account Number</th>
                    <th>Account Name</th>
                    <th>Account Category</th>
                    <th>Account Sub-Category</th>
                    <th>Account Balance</th>
                    <th>Account Created By</th>
                    <th>Date Created</th>
                    <th>Account State</th>
                    <th>Comments</th>
                    <th>Term</th>
                    <th></th>

                </tr>
            </thead>
            <tfoot>
                <tr>

                    <th>Account Number</th>
                    <th>Account Name</th>
                    <th>Account Category</th>
                    <th>Account Sub-Category</th>
                    <th>Account Balance</th>
                    <th>Account Created By</th>
                    <th>Date Created</th>
                    <th>Account State</th>
                    <th>Comments</th>
                    <th>Term</th>
                    <th></th>

                </tr>
            </tfoot>
        </table>
    </div>
    @using (Ajax.BeginForm("SaveDataInDB", new AjaxOptions { OnSuccess = "onChangeSuccess" }))
    {

        <div id="addAccounts" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class='modal-header'>
                        <h4 id="modatTitle"></h4>
                        <a href="#" class="close" data-dismiss="modal" style="color:red">&times;</a>
                    </div>

                    <div class="modal-body">

                        <form id="form">

                            <div class="form-group">
                                Account Number:
                                @Html.TextBoxFor(m => m.acctNo, new { @id = "acctNo", @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.acctNo)
                            </div>
                            <div class="form-group">
                                Account Name:
                                @Html.TextBoxFor(m => m.acctName, new { @id = "acctName", @class = "form-control", @placeholder = "Account Name" })
                                @Html.ValidationMessageFor(m => m.acctName)
                            </div>
                            <div class="form-group">
                                Account Category:
                                @Html.DropDownListFor(m => m.acctCat, ViewBag.ListOfCat as SelectList, "--Select Category", new { @id = "acctCatDD", @class = "form-control", @placeholder = "Account Category" })
                                @Html.ValidationMessageFor(m => m.acctCat)
                            </div>
                            <div class="form-group">
                                Account Sub-Category:
                                @Html.DropDownListFor(m => m.acctSubCat, ViewBag.ListofSubCat as SelectList, "--Select Sub Category", new { @id = "acctSubCatDD", @class = "form-control", @placeholder = "Account Sub Category" })
                            </div>
                            <div class="form-group">
                                Account Term:
                                @Html.DropDownListFor(m => m.acctTerm, ViewBag.ListofTerm as SelectList, "--Select Term", new { @id = "acctTermDD", @class = "form-control", @placeholder = "Account Term" })
                            </div>
                            <div class="form-group">
                                Account State:
                                @Html.DropDownListFor(m => m.acctStateID, ViewBag.ListofState as SelectList, "--Select State", new { @id = "acctStateDD", @class = "form-control", @placeholder = "Account Stae" })
                            </div>
                            <div class="form-group">
                                <a href="#" class="btn btn-block btn-warning" id="resetForm">Reset</a>
                                <a href="#" class="btn btn-block btn-danger" id="SaveAccount">Save</a>

                            </div>
                        </form>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>

    }

    <div class="modal fade" id="ledger">
        <div class="modal-dialog embed-responsive" style=" width: 100% !important;">
            <div class="modal-content">
                <div class="modal-header">

                    <h4 style="padding-right: 5px" id="acctTitle"> </h4>
                    <a href="#" class="close text-danger" data-dismiss="modal">&times;</a>
                </div>
                <div class="modal-body">

                    <table id="ledgerTable" class="table-condensed" style="margin:auto; width: 100%;">

                        <thead class="">

                            <tr>
                                <th>Date </th>
                                <th>Post Reference No.</th>
                                <th>Debit</th>
                                <th> Credit</th>
                            </tr>
                        </thead>
                        <tbody>

                            <tr></tr>

                        </tbody>
                        <tfoot>
                            <tr>
                                <th>
                                </th>
                                <th>
                                </th>
                                <th>
                                </th>
                                <th>
                                </th>
                            </tr>

                        </tfoot>

                    </table>

                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="journalDetails">
        <div class="modal-dialog embed-responsive" style=" width: 100% !important;">
            <div class="modal-content">
                <div class="modal-header">

                    <h4 style="padding-right: 5px" id="jouralTitle">Transactions</h4>
                    <a href="#" class="close text-danger" data-dismiss="modal">&times;</a>
                </div>

                <div class="modal-body">
                    <table id="journalDetailsTable" class="transTable1" style=" width: 100% !important;">

                        <thead class="thead-dark">
                            <tr>
                                <th>Date</th>
                                <th>Type</th>
                                <th>Prepared By</th>
                                <th>Approved By</th>

                            </tr>
                        </thead>

                    </table>
                    <table id="transDebTable" class="transTable1" style=" width: 100% !important;">

                        <thead class="thead-dark">
                            <tr>
                                <th>Account</th>
                                <th>Transaction Type</th>
                                <th>Amount</th>

                            </tr>
                        </thead>

                    </table>
                    <table id="transCredTable" class="transTable" style=" width: 100% !important;">
                        <tr>
                            <th>Account</th>
                            <th>Transaction Type</th>
                            <th>Amount</th>
                        </tr>


                    </table>

                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="editAccounts" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class='modal-header'>
                    <h4 id="modatTitle"></h4>
                    <a href="#" class="close" data-dismiss="modal" style="color:red">&times;</a>
                </div>

                <div class="modal-body">

                    <form id="form">

                        <div class="form-group">
                            Account Number:
                            @Html.TextBoxFor(m => m.acctNo, new { @id = "acctNo", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.acctNo)
                        </div>
                        <div class="form-group">
                            Account Name:
                            @Html.TextBoxFor(m => m.acctName, new { @id = "acctName", @class = "form-control", @placeholder = "Account Name" })
                            @Html.ValidationMessageFor(m => m.acctName)
                        </div>
                        <div class="form-group">
                            Account Category:
                            @Html.DropDownListFor(m => m.acctCat, ViewBag.ListOfCat as SelectList, "--Select Category", new { @id = "acctCatDD", @class = "form-control", @placeholder = "Account Category" })
                            @Html.ValidationMessageFor(m => m.acctCat)
                        </div>
                        <div class="form-group">
                            Account Sub-Category:
                            @Html.DropDownListFor(m => m.acctSubCat, ViewBag.ListofSubCat as SelectList, "--Select Sub Category", new { @id = "acctSubCatDD", @class = "form-control", @placeholder = "Account Sub Category" })
                        </div>
                        <div class="form-group">
                            Account Term:
                            @Html.DropDownListFor(m => m.acctTerm, ViewBag.ListofTerm as SelectList, "--Select Term", new { @id = "acctTermDD", @class = "form-control", @placeholder = "Account Term" })
                        </div>
                        <div class="form-group">
                            Account State:
                            @Html.DropDownListFor(m => m.acctStateID, ViewBag.ListofState as SelectList, "--Select State", new { @id = "acctStateDD", @class = "form-control", @placeholder = "Account Stae" })
                        </div>
                        <div class="form-group">
                            <a href="#" class="btn btn-block btn-danger" id="EditSaveAccount">Save</a>
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
    <div id="ConfirmDeactivate" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class='modal-header'>
                    <h4 id="modalTitle"></h4>
                    <a href="#" class="close" data-dismiss="modal" style="color:red">&times;</a>
                </div>
                <div class="modal-body">

                    <h4>
                        Are You Sure You Want To Deactivate This Account?
                        @Html.HiddenFor(a => a.acctNo)
                    </h4>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-block btn-danger" onclick="DeactivateAccount()">Deactivate</a>
                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
    <div id="ConfirmActivate" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class='modal-header'>
                    <h4 id="modalTitle1"></h4>
                    <a href="#" class="close" data-dismiss="modal" style="color:red">&times;</a>
                </div>
                <div class="modal-body">

                    <h4>
                        Are You Sure You Want To Activate This Account?
                        @Html.HiddenFor(a => a.acctNo)
                    </h4>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-block btn-success" onclick="ActivateAccounts()">Activate</a>
                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>

</body>

</html>
<script>
    $(document).ready(function () {      
     
        var otable = $('#accountsTable').DataTable({
            "dom": ' <"search"f><"top"l>rt<"bottom"ip><"clear">',
            "processing": true,
            // "serverSide": true,
            "ajax": {
                "url": '/ChartOfAccounts/LoadData',
                "type": "POST",
                "datatype": "json",
                "data": "data"
            },
            "columns": [

                
                //index 0
                {
                    "data": "acctNo",
                    "render": function (data, type) {
                        if (type == 'display') {
                            return "<a href='#' onclick='ledgerModal(" + data + ")'>" + data + " </a>";
                        }
                        return data;
                    },

                    "name": "acctNo", "autoWidth": true
                },///index 1
                { "data": "acctName", "name": "acctName", "autoWidth": true },//index 1
                { "data": "catName", "name": "acctCat", "autoWidth": true },//index 2
                { "data": "acctSubCatName", "name": "acctSubCat", "autoWidth": true },//index 3
                {
                    "data": "balance",
                    "render": $.fn.dataTable.render.number(',', '.', 2, '$'),
                    "name": "balance", "autoWidth": true
                },//index 4
                { "data": "createdBy", "name": "createdBy", "autoWidth": true },//index 5
                {
                    "data": "dateCreated",
                    "render": function (d) {
                        return moment(d).format("MM/DD/YYYY");
                    },
                    "name": "dateCreated", "autoWidth": true
                },//index 6
                { "data": "actState", "name": "acctStateID", "autoWidth": true },//index 7
                { "data": "comments", "name": "comments", "autoWidth": true },
                { "data": "termName", "name": "termName", "autoWidth": true },
                {
                    "data": "acctNo", "render": function (data) {
                        return "<a href='#' class='btn btn-block  btn-warning' onclick='editAccount(" + data.acctNo + ")'></i>Edit</a><a href = '#' class='btn btn-block btn-danger' style='padding-left=5px' onclick = 'deleteAccounts(" + data.acctNo + ")' ></i> Deactivate</a>";
                        ;
                    },
                    "name": "acctNo",
                    "orderable": false,
                    "bSortable": false

                }               //index 8

            ],
            "columnDefs": [
                {
                    className: "text-right", "targets": [4]
                        }
            ],
            rowCallback: function (row, data) {
                if (data.actState == "Active") {
                    $('td:nth-child(11)', row).html("<a href='#' class='btn btn-block btn-warning' onclick='editAccount(" + data.acctNo + ")'></i>Edit</a><a href='#' class='btn btn-block btn-danger' style='padding-bottom: 5px'  onclick='deleteAccounts(" + data.acctNo + ")'>Deactivate</a>");

                }
                else if (data.actState == "Inactive") {
                    $('td:nth-child(11)', row).html("<a href='#' class='btn btn-block btn-warning' onclick='editAccount(" + data.acctNo + ")'></i>Edit</a><a href='#' class='btn btn-block  btn-success' style='padding-bottom: 5px'  onclick='activeAccounts(" + data.acctNo + ")'>Activate</a>");

                }
               
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '$').display;
                    if (data.balance < 0) {
                        $('td:nth-child(5)', row).html(numFormat(data.balance * -1));
                    }

            }


        });

      
        function sqlToJsDate(sqlDate) {
            //sqlDate in SQL DATETIME format ("yyyy-mm-dd hh:mm:ss.ms")
            var sqlDateArr1 = sqlDate.split("-");
            //format of sqlDateArr1[] = ['yyyy','mm','dd hh:mm:ms']
            var sYear = sqlDateArr1[0];
            var sMonth = (Number(sqlDateArr1[1]) - 1).toString();
            var sqlDateArr2 = sqlDateArr1[2].split(" ");
            //format of sqlDateArr2[] = ['dd', 'hh:mm:ss.ms']
            var sDay = sqlDateArr2[0];
            var sqlDateArr3 = sqlDateArr2[1].split(":");
            //format of sqlDateArr3[] = ['hh','mm','ss.ms']
            var sHour = sqlDateArr3[0];
            var sMinute = sqlDateArr3[1];
            var sqlDateArr4 = sqlDateArr3[2].split(".");
            //format of sqlDateArr4[] = ['ss','ms']
            var sSecond = sqlDateArr4[0];
            var sMillisecond = sqlDateArr4[1];

            return new Date(sYear, sMonth, sDay, sHour, sMinute, sSecond, sMillisecond);
        }
        $('#table-filter').on('change', function () {
            otable.search(this.value).draw();
        });
        $('#table-filter1').on('change', function () {
            otable.search(this.value).draw();
        });
        $('#table-filter2').on('change', function () {
            otable.search(this.value).draw();
        });



    });
   /* function AddAccounts(acctNo) {
        $("form")[0].reset();
        acctNo = $("#acctNo").val();
        $("#modatTitle").html("Add New Account");
        $("#acctCatDD option:selected").text("--Select Cat--");
        $("#addAccounts").modal();
       
    }*/
    function ledgerModal(data) {
        $("#ledger").modal();
        $("#acctTitle").html("Account: " + data);
        var ledgerTable = $('#ledgerTable').DataTable({
            //processing: false,
            "ajax": {

                "url": "/Journal/LoadLedger?acctNo=" + data,
                "type": "POST",
                "datatype": "json",
                "data": "data"
            },
            "destroy": true,
            "searching": false,
            "paging": false,
            "info": false,
            "sort": false,

            "columns": [

                {
                    "data": "approvalDate",
                    "render": function (d) {
                        return moment(d).format("MM/DD/YYYY");
                    }, "name": "approvalDate", "autoWidth": true
                },
                {
                    "data": "journalID",  // this is only difference, link here, accountant no link.
                    "render": function (data, type) {
                        if (type == 'display') {
                            return "<a href='#' onclick='journalModal(" + data + ")'>" + data + " </a>";
                        }
                        return data;
                    },

                    "name": "acctName", "autoWidth": true
                },

                {
                    "data": "debits",
                    "render": $.fn.dataTable.render.number(',', '.', 2, '$'),
                    "name": "debits",
                    "autoWidth": true,
                },
                {
                    "data": "credits",
                    "render": $.fn.dataTable.render.number(',', '.', 2, '$'),
                    "name": "credits",
                    "autoWidth": true,
                },

            ],
            "columnDefs": [
                { className: "text-right", "targets": [2, 3] },
                { className: "text-center", "targets": [0, 1] },
                { searchable: false, targets: [0, 1, 2, 3] },
                { orderable: false, targets: [0, 1, 2, 3] },
                { orderFixed: [1, ''] }

            ],

            footerCallback: function (row, data) {
                var api = this.api(), data;
                var numFormat = $.fn.dataTable.render.number(',', '.', 2, '$').display;
                var intVal = function (i) {
                    return i
                };

                var debtTotal = api
                    .column(2)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                var credTotal = api
                    .column(3)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(0).footer()).html('Balance');
                $(api.column(2).footer()).html('');
                $(api.column(2).footer()).css('text-align', 'right');
                $(api.column(3).footer()).html(numFormat((debtTotal - credTotal)));

                $(api.column(3).footer()).css('text-align', 'right');

            },

        });
    }

    function journalModal(data) {
        $("#journalDetails").modal();
        $("#jouralTitle").html("Journal #: " + data);
        var journalDetails = $('#journalDetailsTable').DataTable({
            processing: false,
            "ajax": {

                "url": "/Journal/LoadJournalDetails?journalId=" + data,
                "type": "GET",
                "datatype": "json",
                "data": "data"
            },
            "destroy": true,
            "searching": false,
            "paging": false,
            "info": false,
            "sort": false,


            "columns": [
                {
                    "data": "datePrepared",
                    "render": function (d) {
                        return moment(d).format("MM/DD/YYYY");
                    },
                    "name": "acctName", "autoWidth": true
                },//index 1
                { "data": "journalType", "name": "transactionType", "autoWidth": true },
                { "data": "preparorID", "name": "transactionType", "autoWidth": true },
                { "data": "approverID", "name": "transactionType", "autoWidth": true },//index 2


            ],

            "columnDefs": [
                { className: "text-right", "targets": [2, 3] }
            ]


        });
        var transDebTable = $('#transDebTable').DataTable({
            processing: false,


            "ajax": {

                "url": "/Journal/LoadTransactionDeb?journalId=" + data,
                "type": "GET",
                "datatype": "json",
                "data": "data"
            },
            "destroy": true,
            "searching": false,
            "paging": false,
            "info": false,
            "sort": false,


            "columns": [
                { "data": "acctName", "name": "acctName", "autoWidth": true },//index 1
                { "data": "transactionType", "name": "transactionType", "autoWidth": true },//index 2
                {
                    "data": "transactionAmount",
                    "render": $.fn.dataTable.render.number(',', '.', 2, '$ '),
                    "name": "transactionAmount",
                    "autoWidth": true,
                },

            ],

            "columnDefs": [
                { className: "text-right", "targets": 2 }
            ]


        });
        var transCredTable = $('#transCredTable').DataTable({
            processing: false,

            "ajax": {
                "url": "/Journal/LoadTransactionCred?journalId=" + data,
                "type": "GET",
                "datatype": "json",
                "data": "data"
            },

            "destroy": true,
            "searching": false,
            "paging": false,
            "info": false,
            "sort": false,


            "columns": [

                { "data": "acctName", "name": "acctName", "autoWidth": true },//index 1
                { "data": "transactionType", "name": "transactionType", "autoWidth": true },//index 2
                {
                    "data": "transactionAmount",
                    "render": $.fn.dataTable.render.number(',', '.', 2, '$ '),
                    "name": "transactionAmount",
                    "autoWidth": true,
                },

            ],

            "columnDefs": [
                { className: "text-right", "targets": [2] },
                { className: "text-center", "targets": [0, 1] }
            ]


        });
    }

    function AddAccounts() {
        var form = $("form")
            .removeData("validator")
            .removeData("unobtrusiveValidation");

        $.validator.unobtrusive.parse(form);
        $("#form")[0].reset();
        $('#acctNo').val();
        $("#modatTitle").html("Add New Account");
        $("#acctCatDD option:selected").text("--Select Cat--");
        $("#acctSubCatDD option:selected").text("--Select Sub Cat--");
        $("#acctTermDD option:selected").text("--Select Term--");
        $("#addAccounts").modal();
    }
    function editAccount(acctNo) {
      
        window.location.href = "@Url.Action("Edit", "ChartOfAccounts")" + "/" + acctNo;
      

    }

    /*event.preventDefault();
   var url = 'Url.Action("Edit", "ChartOfAccounts")';
    window.location.href = url;*/


    $("EditSaveAccount").click(function () {

       
        var acctNo = $('#acctNo').val();
        var acctName = $('#acctName').val();
        var acctCat = $('#acctCatDD option:selected').val();
        var acctSubCat = $('#acctSubCatDD option:selected').val();
        var acctState = $('#acctStateDD option:selected').val();
        var acctTerm = $('#acctTermDD option:selected').val();


        $.ajax({
            type: "post",
            url: "/ChartOfAccounts/EditDatainDB",
            data:
            {

                acctCat: acctCat,
                acctSubCat: acctSubCat,
                acctNo: acctNo,
                acctName: acctName,
                acctTerm: acctTerm,
                acctStateID: acctState

            },
            cache: false,
            success: function (result) {
                alert("Account Successfully Updated!");
                window.location.href = "/ChartOfAccounts/Index";
                $('#editAccounts').modal('hide');
            }

        }); 
    });
    function deleteAccounts(acctNo) {     
        $("#acctNo").val(acctNo);
        $("#modalTitle").html("Deactivate Account: " + acctNo);
        $("#ConfirmDeactivate").modal('show');
    }
    function activeAccounts(acctNo) {
        $("#acctNo").val(acctNo);
        $("#modalTitle1").html("Activate Account: " + acctNo);
        $("#ConfirmActivate").modal('show');
    }
    function DeactivateAccount() {
       var acctNo = $("#acctNo").val();
        $.ajax({

            type: "POST",
            url: "/ChartOfAccounts/DeactivateByAcctNo?acctNo=" + acctNo,
            success: function (result) {
                //$("#accountsTable").api().ajax.reload();
                alert("Account Successfully Deactivated!");
                window.location.href = "/ChartOfAccounts/Index";
                $("#ConfirmDeactivate").modal('hide');
            }
        });
    }
    function ActivateAccounts() {
        var acctNo = $("#acctNo").val();
        $.ajax({

            type: "POST",
            url: "/ChartOfAccounts/DeactivateByAcctNo?acctNo=" + acctNo,
            success: function (result) {
                //$("#accountsTable").api().ajax.reload();
                alert("Account Successfully Activated!");
                window.location.href = "/ChartOfAccounts/Index";
                $("#ConfirmDeactivate").modal('hide');
            }
        });
    }



    $("resetForm").click(function () {

        document.getElementById("form").reset();

    });
    
    $("#SaveAccount").click(function () {
     
     
       
        var acctNo = $('#acctNo').val();
        var acctName = $('#acctName').val();
        var acctCat = $('#acctCatDD option:selected').val();
        var acctSubCat = $('#acctSubCatDD option:selected').val();
        var acctState = $('#acctStateDD option:selected').val();
        var acctTerm = $('#acctTermDD option:selected').val();

        
        $.ajax({
            type: "post",
            url: "/ChartOfAccounts/SaveDataInDB",
            data:
            {
               
                acctCat: acctCat,    
                acctSubCat: acctSubCat,
                acctNo: acctNo,               
                acctName: acctName,               
                acctTerm: acctTerm,
                acctStateID: acctState

            },
            cache: false,
            success: function (result) {
                alert("Account Successfully Added!");
                window.location.href = "/ChartOfAccounts/Index";
                $('#addAccounts').modal('hide');
            }
            
        }); 

    });

    function jQueryAjaxPost(form) {
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            var ajaxConfig = {
                type: 'POST',
                url: form.action,
                data: FormData(form),
              
                success: function (response) {

                }
            }
            if ($(form).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
        }
    }
</script>

<style type="text/css">
    body {
        margin-left: 0px;
        margin-top: 0px;
        margin-right: 0px;
        margin-bottom: 0px;
    }

</style>